#!/usr/bin/env python3
import subprocess
import os

def run_ssh_command(command):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å SSH –∫–æ–º–∞–Ω–¥—É"""
    ssh_key = os.path.expanduser(r"~\.ssh\service_center")
    ssh_host = "root@77.110.127.57"
    
    cmd = ["ssh", "-i", ssh_key, ssh_host, command]
    result = subprocess.run(cmd, capture_output=True, text=True, encoding='utf-8')
    return result

def upload_file(local_path, server_path):
    """–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä"""
    ssh_key = os.path.expanduser(r"~\.ssh\service_center")
    ssh_host = "root@77.110.127.57"
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(local_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∏
    content = content.replace("'", "'\"'\"'")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —á–µ—Ä–µ–∑ echo
    cmd = f"echo '{content}' > /tmp/{os.path.basename(local_path)}"
    result = run_ssh_command(cmd)
    
    if result.returncode == 0:
        # –ö–æ–ø–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        copy_cmd = f"docker cp /tmp/{os.path.basename(local_path)} service-center-service-center-1:{server_path}"
        copy_result = run_ssh_command(copy_cmd)
        
        if copy_result.returncode == 0:
            print(f"‚úÖ {local_path}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è {local_path}: {copy_result.stderr}")
            return False
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {local_path}: {result.stderr}")
        return False

def main():
    print("üöÄ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é —Ñ–∞–π–ª—ã —Å —Å–µ—Ä–≤–µ—Ä–∞...")
    
    files = [
        ("templates/orders.html", "/app/templates/orders.html"),
        ("templates/parts.html", "/app/templates/parts.html"),
        ("templates/services.html", "/app/templates/services.html"),
        ("templates/devices.html", "/app/templates/devices.html"),
        ("templates/archive.html", "/app/templates/archive.html"),
        ("routes/orders.py", "/app/routes/orders.py"),
        ("routes/parts.py", "/app/routes/parts.py"),
        ("routes/services.py", "/app/routes/services.py"),
        ("routes/devices.py", "/app/routes/devices.py"),
        ("routes/archive.py", "/app/routes/archive.py"),
        ("models/service_item.py", "/app/models/service_item.py"),
        ("static/css/modern.css", "/app/static/css/modern.css"),
        ("app.py", "/app/app.py"),
    ]
    
    success = 0
    for local, server in files:
        if os.path.exists(local):
            if upload_file(local, server):
                success += 1
        else:
            print(f"‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω: {local}")
    
    print(f"\nüìä –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {success}/{len(files)} —Ñ–∞–π–ª–æ–≤")
    
    if success > 0:
        print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...")
        restart = run_ssh_command("docker restart service-center-service-center-1")
        if restart.returncode == 0:
            print("‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!")
            print("üéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {restart.stderr}")

if __name__ == "__main__":
    main()
