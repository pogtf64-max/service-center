#!/usr/bin/env python3
import subprocess
import os

def run_ssh_command(command):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å SSH –∫–æ–º–∞–Ω–¥—É"""
    ssh_key = os.path.expanduser(r"~\.ssh\service_center")
    ssh_host = "root@77.110.127.57"
    
    cmd = ["ssh", "-i", ssh_key, ssh_host, command]
    result = subprocess.run(cmd, capture_output=True, text=True, encoding='utf-8')
    return result

def check_loading_issue():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Å–∞–π—Ç–∞"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –ó–ê–ì–†–£–ó–ö–ò")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    print("\n1Ô∏è‚É£ –°–¢–ê–¢–£–° –ö–û–ù–¢–ï–ô–ù–ï–†–û–í:")
    containers = run_ssh_command("docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'")
    print(containers.stdout)
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∏–º –ª–æ–≥–∏ Flask (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å—Ç—Ä–æ–∫)
    print("\n2Ô∏è‚É£ –õ–û–ì–ò FLASK (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å—Ç—Ä–æ–∫):")
    flask_logs = run_ssh_command("docker logs service-center-service-center-1 --tail 30")
    print(flask_logs.stdout)
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∏–º –ª–æ–≥–∏ Nginx (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫)
    print("\n3Ô∏è‚É£ –õ–û–ì–ò NGINX (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):")
    nginx_logs = run_ssh_command("docker logs service-center-nginx-1 --tail 20")
    print(nginx_logs.stdout)
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∏–º –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö
    print("\n4Ô∏è‚É£ –ü–û–ò–°–ö –û–®–ò–ë–û–ö –í –õ–û–ì–ê–•:")
    error_logs = run_ssh_command("docker logs service-center-service-center-1 --tail 100 | grep -i 'error\\|exception\\|traceback\\|failed'")
    print(f"–û—à–∏–±–∫–∏ Flask: {error_logs.stdout}")
    
    nginx_errors = run_ssh_command("docker logs service-center-nginx-1 --tail 50 | grep -i 'error\\|failed\\|timeout'")
    print(f"–û—à–∏–±–∫–∏ Nginx: {nginx_errors.stdout}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∏–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Flask
    print("\n5Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–û–°–¢–£–ü–ù–û–°–¢–ò:")
    flask_test = run_ssh_command("curl -s -w 'HTTP: %{http_code}, Time: %{time_total}s' http://localhost:8080/")
    print(f"Flask –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø: {flask_test.stdout}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∏–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ Nginx
    nginx_test = run_ssh_command("curl -s -w 'HTTP: %{http_code}, Time: %{time_total}s' http://localhost:9000/")
    print(f"Nginx –¥–æ—Å—Ç—É–ø: {nginx_test.stdout}")
    
    # 7. –ü—Ä–æ–≤–µ—Ä–∏–º –≤–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø
    external_test = run_ssh_command("curl -s -w 'HTTP: %{http_code}, Time: %{time_total}s' https://miservis27.ru/")
    print(f"–í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: {external_test.stdout}")
    
    # 8. –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ—Ü–µ—Å—Å—ã Python
    print("\n6Ô∏è‚É£ –ü–†–û–¶–ï–°–°–´ PYTHON:")
    python_processes = run_ssh_command("docker exec -i service-center-service-center-1 bash -c 'ps aux | grep python'")
    print(f"Python –ø—Ä–æ—Ü–µ—Å—Å—ã: {python_processes.stdout}")
    
    # 9. –ü—Ä–æ–≤–µ—Ä–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
    print("\n7Ô∏è‚É£ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –†–ï–°–£–†–°–û–í:")
    memory_usage = run_ssh_command("docker exec -i service-center-service-center-1 bash -c 'free -h'")
    print(f"–ü–∞–º—è—Ç—å: {memory_usage.stdout}")
    
    # 10. –ü—Ä–æ–≤–µ—Ä–∏–º —Å–µ—Ç–µ–≤—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    print("\n8Ô∏è‚É£ –°–ï–¢–ï–í–´–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø:")
    network_connections = run_ssh_command("netstat -tlnp | grep -E ':(80|8080|9000)'")
    print(f"–°–µ—Ç–µ–≤—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {network_connections.stdout}")
    
    # 11. –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ Flask
    print("\n9Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–†–ï–ú–ï–ù–ò –û–¢–í–ï–¢–ê:")
    response_time = run_ssh_command("time curl -s http://localhost:8080/ > /dev/null")
    print(f"–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ Flask: {response_time.stdout}")
    
    # 12. –ü—Ä–æ–≤–µ—Ä–∏–º –µ—Å—Ç—å –ª–∏ –∑–∞–≤–∏—Å—à–∏–µ –∑–∞–ø—Ä–æ—Å—ã
    print("\nüîü –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–®–ò–• –ó–ê–ü–†–û–°–û–í:")
    hanging_requests = run_ssh_command("docker logs service-center-service-center-1 --tail 50 | grep -E 'GET|POST' | tail -10")
    print(f"–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—Ä–æ—Å—ã: {hanging_requests.stdout}")

if __name__ == "__main__":
    check_loading_issue()
