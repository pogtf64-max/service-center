#!/usr/bin/env python3
import subprocess
import os

def run_ssh_command(command):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å SSH –∫–æ–º–∞–Ω–¥—É"""
    ssh_key = os.path.expanduser(r"~\.ssh\service_center")
    ssh_host = "root@77.110.127.57"
    
    cmd = ["ssh", "-i", ssh_key, ssh_host, command]
    result = subprocess.run(cmd, capture_output=True, text=True, encoding='utf-8')
    return result

def check_flask_startup():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–ø—É—Å–∫ Flask"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –ó–ê–ü–£–°–ö–ê FLASK")
    print("=" * 40)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ—Ü–µ—Å—Å—ã –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    print("\n1Ô∏è‚É£ –ü–†–û–¶–ï–°–°–´ –í –ö–û–ù–¢–ï–ô–ù–ï–†–ï:")
    processes = run_ssh_command("docker exec -i service-center-service-center-1 bash -c 'ps aux'")
    print(f"–ü—Ä–æ—Ü–µ—Å—Å—ã: {processes.stdout}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∏–º –∑–∞–ø—É—â–µ–Ω –ª–∏ Flask
    print("\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê FLASK:")
    flask_check = run_ssh_command("docker exec -i service-center-service-center-1 bash -c 'pgrep -f python'")
    print(f"Python –ø—Ä–æ—Ü–µ—Å—Å—ã: {flask_check.stdout}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ—Ä—Ç 8080
    print("\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–ê 8080:")
    port_check = run_ssh_command("docker exec -i service-center-service-center-1 bash -c 'netstat -tlnp | grep 8080'")
    print(f"–ü–æ—Ä—Ç 8080: {port_check.stdout}")
    
    # 4. –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å Flask –≤—Ä—É—á–Ω—É—é
    print("\n4Ô∏è‚É£ –†–£–ß–ù–û–ô –ó–ê–ü–£–°–ö FLASK:")
    manual_start = run_ssh_command("docker exec -i service-center-service-center-1 bash -c 'cd /app && python app.py &'")
    print(f"–†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫: {manual_start.stdout}")
    
    # –ü–æ–¥–æ–∂–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
    import time
    time.sleep(3)
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∏–º —Å–Ω–æ–≤–∞ –ø—Ä–æ—Ü–µ—Å—Å—ã
    print("\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï –†–£–ß–ù–û–ì–û –ó–ê–ü–£–°–ö–ê:")
    processes_after = run_ssh_command("docker exec -i service-center-service-center-1 bash -c 'ps aux | grep python'")
    print(f"–ü—Ä–æ—Ü–µ—Å—Å—ã –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞: {processes_after.stdout}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∏–º –ª–æ–≥–∏ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞
    print("\n6Ô∏è‚É£ –õ–û–ì–ò –ü–û–°–õ–ï –ó–ê–ü–£–°–ö–ê:")
    logs_after = run_ssh_command("docker logs service-center-service-center-1 --tail 10")
    print(f"–õ–æ–≥–∏: {logs_after.stdout}")
    
    # 7. –ü—Ä–æ–≤–µ—Ä–∏–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    print("\n7Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò:")
    access_test = run_ssh_command("curl -s -o /dev/null -w '%{http_code}' http://localhost:8080/")
    print(f"–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: {access_test.stdout}")
    
    # 8. –ü—Ä–æ–≤–µ—Ä–∏–º –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏ –≤ app.py
    print("\n8Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–ò–ù–¢–ê–ö–°–ò–°–ê app.py:")
    syntax_check = run_ssh_command("docker exec -i service-center-service-center-1 bash -c 'cd /app && python -m py_compile app.py'")
    print(f"–°–∏–Ω—Ç–∞–∫—Å–∏—Å: {syntax_check.stdout}")
    if syntax_check.stderr:
        print(f"–û—à–∏–±–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: {syntax_check.stderr}")

if __name__ == "__main__":
    check_flask_startup()
