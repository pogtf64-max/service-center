#!/usr/bin/env python3
import subprocess
import os
import json

def run_ssh_command(command):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å SSH –∫–æ–º–∞–Ω–¥—É"""
    ssh_key = os.path.expanduser(r"~\.ssh\service_center")
    ssh_host = "root@77.110.127.57"
    
    cmd = ["ssh", "-i", ssh_key, ssh_host, command]
    result = subprocess.run(cmd, capture_output=True, text=True, encoding='utf-8')
    return result

def professional_diagnosis():
    """–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã 404"""
    print("üîç –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ï–†–í–ï–†–ê")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    print("\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–ï–†–í–ò–°–û–í:")
    services = run_ssh_command("docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'")
    print(services.stdout)
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print("\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê NGINX:")
    nginx_config = run_ssh_command("docker exec service-center-nginx-1 cat /etc/nginx/nginx.conf")
    print("Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(nginx_config.stdout)
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Flask –Ω–∞–ø—Ä—è–º—É—é
    print("\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê FLASK (–ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø):")
    flask_direct = run_ssh_command("curl -s -o /dev/null -w '%{http_code}' http://localhost:8080/")
    print(f"Flask –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø (–ø–æ—Ä—Ç 8080): {flask_direct.stdout}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ Nginx
    print("\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ß–ï–†–ï–ó NGINX:")
    nginx_access = run_ssh_command("curl -s -o /dev/null -w '%{http_code}' http://localhost:80/")
    print(f"Nginx –¥–æ—Å—Ç—É–ø (–ø–æ—Ä—Ç 80): {nginx_access.stdout}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ Nginx
    print("\n5Ô∏è‚É£ –õ–û–ì–ò NGINX:")
    nginx_logs = run_ssh_command("docker logs service-center-nginx-1 --tail 20")
    print(nginx_logs.stdout)
    
    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ Flask
    print("\n6Ô∏è‚É£ –õ–û–ì–ò FLASK:")
    flask_logs = run_ssh_command("docker logs service-center-service-center-1 --tail 20")
    print(flask_logs.stdout)
    
    # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    print("\n7Ô∏è‚É£ –°–ï–¢–ï–í–´–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø:")
    netstat = run_ssh_command("netstat -tlnp | grep -E ':(80|8080|9000)'")
    print(netstat.stdout)
    
    # 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ä—à—Ä—É—Ç—ã Flask
    print("\n8Ô∏è‚É£ –ú–ê–†–®–†–£–¢–´ FLASK:")
    routes = run_ssh_command("docker exec -i service-center-service-center-1 bash -c 'cd /app && python -c \"from app import app; print(\\\"–ú–∞—Ä—à—Ä—É—Ç—ã:\\\"); [print(f\\\"{rule.rule} -> {rule.endpoint}\\\") for rule in app.url_map.iter_rules()]\"'")
    print(routes.stdout)
    
    # 9. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
    print("\n9Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–ê–†–®–†–£–¢–û–í:")
    test_routes = [
        ("/", "–ö–æ—Ä–Ω–µ–≤–æ–π –º–∞—Ä—à—Ä—É—Ç"),
        ("/dashboard", "Dashboard"),
        ("/login", "–õ–æ–≥–∏–Ω"),
        ("/dashboard/dashboard", "Dashboard blueprint")
    ]
    
    for route, description in test_routes:
        test_result = run_ssh_command(f"curl -s -o /dev/null -w '%{{http_code}}' http://localhost:8080{route}")
        print(f"{description} ({route}): {test_result.stdout}")
    
    # 10. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø
    print("\nüîü –í–ù–ï–®–ù–ò–ô –î–û–°–¢–£–ü:")
    external_test = run_ssh_command("curl -s -o /dev/null -w '%{http_code}' https://miservis27.ru/")
    print(f"–í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø (https://miservis27.ru/): {external_test.stdout}")

if __name__ == "__main__":
    professional_diagnosis()
