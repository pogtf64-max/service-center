#!/usr/bin/env python3
import subprocess
import os

def run_ssh_command(command):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å SSH –∫–æ–º–∞–Ω–¥—É"""
    ssh_key = os.path.expanduser(r"~\.ssh\service_center")
    ssh_host = "root@77.110.127.57"
    
    cmd = ["ssh", "-i", ssh_key, ssh_host, command]
    result = subprocess.run(cmd, capture_output=True, text=True, encoding='utf-8')
    return result

def fix_import():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å –∏–º–ø–æ—Ä—Ç services"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è—é –∏–º–ø–æ—Ä—Ç services...")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ routes/services.py
    services_content = run_ssh_command("docker exec -i service-center-service-center-1 bash -c 'cd /app && cat routes/services.py'")
    print(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ routes/services.py:\n{services_content.stdout}")
    
    # –°–æ–∑–¥–∞–¥–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π routes/services.py
    correct_services = '''from flask import Blueprint, render_template, request, redirect, url_for, flash, jsonify
from models.service_item import ServiceItem
from models.database import db
from flask_login import login_required, current_user

services = Blueprint('services', __name__)

@services.route('/')
@login_required
def index():
    services_list = ServiceItem.query.filter_by(service_id=current_user.service_id).all()
    return render_template('services.html', services=services_list)

@services.route('/add', methods=['GET', 'POST'])
@login_required
def add():
    if request.method == 'POST':
        name = request.form.get('name')
        description = request.form.get('description')
        price = float(request.form.get('price', 0))
        
        service_item = ServiceItem(
            name=name,
            description=description,
            price=price,
            service_id=current_user.service_id
        )
        
        db.session.add(service_item)
        db.session.commit()
        
        flash('–£—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!', 'success')
        return redirect(url_for('services.index'))
    
    return render_template('add_service.html')

@services.route('/edit/<int:id>', methods=['GET', 'POST'])
@login_required
def edit(id):
    service_item = ServiceItem.query.get_or_404(id)
    
    if request.method == 'POST':
        service_item.name = request.form.get('name')
        service_item.description = request.form.get('description')
        service_item.price = float(request.form.get('price', 0))
        
        db.session.commit()
        flash('–£—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!', 'success')
        return redirect(url_for('services.index'))
    
    return render_template('edit_service.html', service=service_item)

@services.route('/delete/<int:id>')
@login_required
def delete(id):
    service_item = ServiceItem.query.get_or_404(id)
    db.session.delete(service_item)
    db.session.commit()
    
    flash('–£—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!', 'success')
    return redirect(url_for('services.index'))
'''
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    print("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...")
    stop_result = run_ssh_command("docker stop service-center-service-center-1")
    
    # –°–æ–∑–¥–∞–¥–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–∞–π–ª
    print("üìù –°–æ–∑–¥–∞—é –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π routes/services.py...")
    create_cmd = f"cat > /tmp/services_correct.py << 'EOF'\n{correct_services}\nEOF"
    create_result = run_ssh_command(create_cmd)
    
    if create_result.returncode == 0:
        # –°–∫–æ–ø–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        print("üìã –ö–æ–ø–∏—Ä—É—é —Ñ–∞–π–ª –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...")
        copy_result = run_ssh_command("docker cp /tmp/services_correct.py service-center-service-center-1:/app/routes/services.py")
        
        if copy_result.returncode == 0:
            print("‚úÖ –§–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!")
            
            # –ó–∞–ø—É—Å—Ç–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...")
            start_result = run_ssh_command("docker start service-center-service-center-1")
            
            if start_result.returncode == 0:
                print("‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω!")
                
                # –ü–æ–¥–æ–∂–¥–µ–º
                import time
                time.sleep(5)
                
                # –ü—Ä–æ–≤–µ—Ä–∏–º –ª–æ–≥–∏
                logs = run_ssh_command("docker logs service-center-service-center-1 --tail 10")
                print(f"–õ–æ–≥–∏: {logs.stdout}")
                
                if "Running on" in logs.stdout:
                    print("üéâ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ! –û—à–∏–±–∫–∞ 502 –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
                else:
                    print("‚ùå Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—Å–µ –µ—â–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {start_result.stderr}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: {copy_result.stderr}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞: {create_result.stderr}")

if __name__ == "__main__":
    fix_import()
